prototype(Carbon.FormComponent:Field) < prototype(Neos.Fusion:Component) {

    // Type of field
    field = null

    // For help textes, etc.
    hint = null

    id = null
    name = null
    label = null
    placeholder = null
    value = null

    required = false
    disabled = false
    readonly = false

    isRequired = ${this.required}
    properties = Neos.Fusion:RawArray
    validationErrors = Neos.Fusion:RawArray

    hasError = ${Type.isArray(this.validationErrors) && !Array.isEmpty(this.validationErrors)}

    renderer.@process.defaultFieldWrapping = afx`
        <div class={'form-element form-' + props.field + (props.hasError ? ' form-has-error' : '')}>
            <Neos.Fusion:Augmenter id={props.id} class={'form-element-field' + (props.value ? ' -hasvalue' : '')} required={props.required ? 'true' : false} disabled={props.disabled ? 'true' : false} readonly={props.readonly ? 'true' : false}>
                {value}
            </Neos.Fusion:Augmenter>
            <div class='form-element-bar'></div>
            <label class='form-element-label' for={props.id} @if.render={props.label}>{props.label}</label>
            <Carbon.FormComponent:Hint hint={props.hint} validationErrors={props.validationErrors} />
        </div>
    `
}
